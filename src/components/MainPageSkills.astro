---
import MainPageSkill from './MainPageSkill.astro';

import { skills } from '../constants/MainPage';
---

<section id="skills" class="desktop-only">
  {
    skills.map((skill) => (
      <MainPageSkill
        skill={skill.skill}
        subskills={skill.subskills}
        elementSkillId={skill.elementSkillId}
        elementSubskillId={skill.elementSubskillId}
        color={skill.color}
      />
    ))
  }

  <script is:inline src="/js/scroll.js"></script>
  <script>
    import { skills } from '../constants/MainPage';

    const getScrollTimelineWithiShift = (shift: number) => {
      //@ts-ignore
      return new ScrollTimeline({
        source: document.scrollingElement,
        orientation: 'block',
        scrollOffsets: [
          //@ts-ignore
          CSS.px(shift + 200),
          //@ts-ignore
          CSS.px(document.getElementById('skills').getBoundingClientRect().y + window.scrollY + shift - 110)
        ]
      });
    };

    skills.forEach((item, index) => {
      const subskillCircleElement = document.getElementById(item.elementSubskillId);

      subskillCircleElement?.offsetWidth &&
        subskillCircleElement.animate(
          { transform: ['translateX(0)', `translateX(-${subskillCircleElement.offsetWidth / 2 + 60}px)`] },
          {
            duration: 1,
            fill: 'both',
            //@ts-ignore
            timeline: getScrollTimelineWithiShift(subskillCircleElement.offsetHeight * index)
          }
        );

      const skillCircleElement = document.getElementById(item.elementSkillId);

      skillCircleElement?.offsetWidth &&
        skillCircleElement.animate(
          { transform: ['translateX(0)', `translateX(${skillCircleElement.offsetWidth / 2 + 60}px)`] },
          {
            duration: 1,
            fill: 'both',
            //@ts-ignore
            timeline: getScrollTimelineWithiShift(skillCircleElement.offsetHeight * index)
          }
        );
    });
  </script>
</section>

<style>
  section {
    display: flex;
    flex-direction: column;
    gap: 70px;
  }
</style>
